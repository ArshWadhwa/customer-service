plugins {
    id 'java'
    id "org.flywaydb.flyway" version "7.3.1"
    id 'org.springframework.boot' version '3.3.3'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'application'
}

String dbName = System.getenv("DB_USER") != null ? System.getenv("DB_NAME") : "customer";
String username = System.getenv("DB_USER") != null ? System.getenv("DB_USER") : "postgres";
String password = System.getenv("DB_PASSWORD") != null ? System.getenv("DB_PASSWORD") : "postgres";

group = 'org.example'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}



flyway {
    url = "jdbc:postgresql://localhost:5432/"+dbName
    user = username
    password = password
    locations = ["filesystem:${project.projectDir}/src/main/resources/migration"]
    baselineVersion = "0"
    baselineOnMigrate = true
}



dependencies {
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    implementation 'org.postgresql:postgresql:42.7.2'
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
    implementation "org.springframework.boot:spring-boot-starter-log4j2"
    implementation 'org.springframework.boot:spring-boot-starter-validation'
}
configurations {
    all*.exclude module : 'spring-boot-starter-logging'
}

task migrateCustomer(type: org.flywaydb.gradle.task.FlywayMigrateTask) {
    url = "jdbc:postgresql://localhost:5432/"+dbName
    user = username
    password = password
    locations = ["filesystem:${project.projectDir}/src/main/resources/migration"]
    baselineVersion = "0"
    baselineOnMigrate = true
}

test {
    useJUnitPlatform()
}

//To run the class name from command line using gradle run
application {
    mainClass = 'customer.Main'
}